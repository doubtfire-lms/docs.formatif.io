{"pageProps":{"id":"installation-mac","audience":"developer","markdown":"\nTo get Doubtfire installed on macOS, follow the steps below:\n\nOnce you have all of these steps complete you should be setup and ready to using Doubtfire.\n\n---\n\n# Step 1: Installing doubtfire-api\n\n## 1. Install Homebrew and Homebrew Cask\n\nInstall [Homebrew](https://brew.sh/) for easy package management, if you haven't already, as well as\n[Homebrew Cask](http://caskroom.io):\n\n```shell\n$ /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n$ brew tap caskroom/cask\n```\n\n---\n\n## 2. Install rbenv and ruby-build\n\nInstall [rbenv](https://github.com/rbenv/rbenv) and ruby-build:\n\n```shell\n$ brew install ruby ruby-build rbenv\n```\n\nAdd the following to your `.bashrc`:\n\n```shell\n$ echo 'eval \"$(rbenv init -)\"' >> ~/.bashrc\n```\n\n_or_, if you're using [Oh-My-Zsh](https://ohmyz.sh/), add to your `.zshrc`:\n\n```shell\n$ echo 'eval \"$(rbenv init -)\"' >> ~/.zshrc\n```\n\nNow install Ruby v2.3.8:\n\n```shell\n$ rbenv install 2.3.8\n```\n\nClone project and change your working directory to the api:\n\n```shell\n$ git clone https://github.com/doubtfire-lms/doubtfire-api.git\n\n$ cd ./doubtfire-api\n```\n\nFor switching the Ruby version to 2.3.8 use the following command:\n\n```shell\n$ rbenv local 2.3.8\n```\n\n---\n\n## 3. Install Postgres\n\nInstall the [Postgres App](https://postgresapp.com/):\n\n```shell\n$ brew cask install postgres --appdir=/Applications\n```\n\nEnsure `pg_config` is on the `PATH`, and then login to Postgres:\n\n```shell\n$ export PATH=/Applications/Postgres.app/Contents/Versions/*/bin:$PATH\n\n$ psql\n```\n\nCreate the Doubfire user the following at the Postgres prompt:\n\n```sql\nCREATE ROLE itig WITH CREATEDB PASSWORD 'd872$dh' LOGIN;\n```\n\n---\n\n## 4. Install native tools\n\nInstall `imagemagick` at version 6, `libmagic` and `ghostscript` using Homebrew:\n\n```shell\n$ brew install imagemagick@6 libmagic ghostscript ffmpeg\n\n$ brew link --force imagemagick@6\n```\n\nYou will also need to install the Python `pygments` package:\n\n```shell\n$ sudo easy_install Pygments\n```\n\nIf you are a developer for the project, it is usually better to\n[create a fork](https://help.github.com/github/getting-started-with-github/fork-a-repo) for the repository and then\nfollow the steps given below.\n\n---\n\n## 5. Install Doubtfire API dependencies\n\nSet up [overcommit](https://github.com/sds/overcommit) and install hooks:\n\n```shell\n$ gem install overcommit -v 0.47.0\n\n$ rbenv rehash\n\n$ overcommit --install\n```\n\nThen install Doubtfire API dependencies using [bundler](https://bundler.io/):\n\n```shell\n$ gem install bundler -v 1.17.3\n\n$ bundle install --without production replica staging\n\n$ rbenv rehash\n```\n\n---\n\n## 6. Create and populate Doubtfire\n\nWhilst still in the Doubtfire API project root, execute:\n\n```shell\n$ bundle exec rake db:create\n```\n\nYou can choose to populate the database with some fake test data using:\n\n```shell\n$ bundle exec rake db:populate\n```\n\n---\n\n## 7. Install LaTex to generate PDFs\n\nInstall LaTeX now\n\n```shell\n$ brew cask install mactex\n```\n\nFollow the\n[Generating PDFs](<[/doubtfire-lms/doubtfire-api/wiki/Generating-PDFs](https://github.com/doubtfire-lms/doubtfire-api/wiki/Generating-PDFs)>)\nguide to assist with installing LaTeX to generate PDFs. This step is optional unless you wish to generate PDF\nsubmissions.\n\n---\n\n## 8. Get it up and running!\n\nOnce you've installed using either the install script or the manual install steps, use the following command to run the\napi\n\n```shell\n$ bundle exec rails s\n```\n\n---\n\n# Step 2: Installing doubtfire-web\n\nContinue below steps to manually install `doubtfire-web` on Mac OS. For installing Doubtfire-web dependencies we have to\nclone project and change working directory to web\n\n```shell\n$ git clone https://github.com/doubtfire-lms/doubtfire-web.git\n\n$ cd ./doubtfire-web\n```\n\nInstall [Node.js](https://nodejs.org/) either by [downloading it](https://nodejs.org/download/) and installing it\nmanually, or via [Homebrew](https://brew.sh/) on OS X:\n\n```shell\n$ brew install node\n```\n\nFor switching the Ruby version to 2.3.8 use the following command:\n\n```shell\n$ rbenv local 2.3.8\n```\n\nInstall overcommit and Ruby [SASS](https://sass-lang.com/):\n\n```shell\n$ gem install overcommit sass\n```\n\nIf gem fails, you should read the Doubfire API README to install ruby. If you are not using rbenv, e.g., using Docker\ninstead, you may need to prepend sudo to the above commands to have root write access.\n\nIf using rbenv, rehash to ensure each of the gems are on your PATH:\n\n```shell\n$ rbenv rehash\n```\n\nInstall and sign the git hooks using overcommit:\n\n```shell\n$ overcommit --install\n$ overcommit --sign\n```\n\nInstall all node dependencies using npm, as well as [grunt-cli](https://gruntjs.com/using-the-cli) globally:\n\n```shell\n$ npm install\n```\n\nLastly, to compile and run a watch server and web server, use npm start:\n\n```shell\n$ npm start\n```\n\nThis will automatically run the angular 1 grunt watch, and the angular 9 ng serve.\n\nYou can then navigate to the Doubtfire web interface at [http://localhost:8000](http://localhost:8000/) on your web\nbrowser.\n\n---\n\n# Step 3: Installing Doubtfire.io\n\nClone the Doubtfire.io project and change the working directory into it via,\n\n```shell\n$ git clone https://github.com/doubtfire-lms/doubtfire.io.git\n\n$ cd ./doubtfire.io\n```\n\nThen, follow the instructions in the\n[\"Getting Started\" section of its `CONTRIBUTING.md` file](https://github.com/doubtfire-lms/doubtfire.io/blob/master/CONTRIBUTING.md#getting-started)\nto setup the project and its development environment, locally.\n","title":"Installing Doubtfire on macOS","summary":"Guides the user through an installation on macOS","authors":["macite","jakerenzella"],"html":"<p>To get Doubtfire installed on macOS, follow the steps below:</p><p>Once you have all of these steps complete you should be setup and ready to using Doubtfire.</p><hr><h2 id=\"step-1-installing-doubtfire-api\">Step 1: Installing doubtfire-api<a href=\"#step-1-installing-doubtfire-api\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h2><h3 id=\"1-install-homebrew-and-homebrew-cask\">1. Install Homebrew and Homebrew Cask<a href=\"#1-install-homebrew-and-homebrew-cask\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h3><p>Install <a href=\"https://brew.sh/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Homebrew</a> for easy package management, if you haven't already, as well as <a href=\"http://caskroom.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Homebrew Cask</a>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> /usr/bin/ruby -e <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>\"</span></span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> brew tap caskroom/cask</span></code></pre><hr><h3 id=\"2-install-rbenv-and-ruby-build\">2. Install rbenv and ruby-build<a href=\"#2-install-rbenv-and-ruby-build\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h3><p>Install <a href=\"https://github.com/rbenv/rbenv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">rbenv</a> and ruby-build:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> brew install ruby ruby-build rbenv</span></code></pre><p>Add the following to your <code>.bashrc</code>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'eval \"$(rbenv init -)\"'</span> >> ~/.bashrc</span></code></pre><p><em>or</em>, if you're using <a href=\"https://ohmyz.sh/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Oh-My-Zsh</a>, add to your <code>.zshrc</code>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'eval \"$(rbenv init -)\"'</span> >> ~/.zshrc</span></code></pre><p>Now install Ruby v2.3.8:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> rbenv install 2.3.8</span></code></pre><p>Clone project and change your working directory to the api:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> https://github.com/doubtfire-lms/doubtfire-api.git</span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> <span class=\"hljs-built_in\">cd</span> ./doubtfire-api</span></code></pre><p>For switching the Ruby version to 2.3.8 use the following command:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> rbenv <span class=\"hljs-built_in\">local</span> 2.3.8</span></code></pre><hr><h3 id=\"3-install-postgres\">3. Install Postgres<a href=\"#3-install-postgres\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h3><p>Install the <a href=\"https://postgresapp.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Postgres App</a>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> brew cask install postgres --appdir=/Applications</span></code></pre><p>Ensure <code>pg_config</code> is on the <code>PATH</code>, and then login to Postgres:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">export</span> PATH=/Applications/Postgres.app/Contents/Versions/*/bin:<span class=\"hljs-variable\">$PATH</span></span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> psql</span></code></pre><p>Create the Doubfire user the following at the Postgres prompt:</p><pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">ROLE</span> itig <span class=\"hljs-keyword\">WITH</span> CREATEDB <span class=\"hljs-keyword\">PASSWORD</span> <span class=\"hljs-string\">'d872$dh'</span> LOGIN;</code></pre><hr><h3 id=\"4-install-native-tools\">4. Install native tools<a href=\"#4-install-native-tools\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h3><p>Install <code>imagemagick</code> at version 6, <code>libmagic</code> and <code>ghostscript</code> using Homebrew:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> brew install imagemagick@6 libmagic ghostscript ffmpeg</span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> brew link --force imagemagick@6</span></code></pre><p>You will also need to install the Python <code>pygments</code> package:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo easy_install Pygments</span></code></pre><p>If you are a developer for the project, it is usually better to <a href=\"https://help.github.com/github/getting-started-with-github/fork-a-repo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">create a fork</a> for the repository and then follow the steps given below.</p><hr><h3 id=\"5-install-doubtfire-api-dependencies\">5. Install Doubtfire API dependencies<a href=\"#5-install-doubtfire-api-dependencies\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h3><p>Set up <a href=\"https://github.com/sds/overcommit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">overcommit</a> and install hooks:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> gem install overcommit -v 0.47.0</span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> rbenv <span class=\"hljs-built_in\">rehash</span></span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> overcommit --install</span></code></pre><p>Then install Doubtfire API dependencies using <a href=\"https://bundler.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">bundler</a>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> gem install bundler -v 1.17.3</span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> bundle install --without production replica staging</span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> rbenv <span class=\"hljs-built_in\">rehash</span></span></code></pre><hr><h3 id=\"6-create-and-populate-doubtfire\">6. Create and populate Doubtfire<a href=\"#6-create-and-populate-doubtfire\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h3><p>Whilst still in the Doubtfire API project root, execute:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> bundle <span class=\"hljs-built_in\">exec</span> rake db:create</span></code></pre><p>You can choose to populate the database with some fake test data using:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> bundle <span class=\"hljs-built_in\">exec</span> rake db:populate</span></code></pre><hr><h3 id=\"7-install-latex-to-generate-pdfs\">7. Install LaTex to generate PDFs<a href=\"#7-install-latex-to-generate-pdfs\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h3><p>Install LaTeX now</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> brew cask install mactex</span></code></pre><p>Follow the <a href=\"%5B/doubtfire-lms/doubtfire-api/wiki/Generating-PDFs%5D(https://github.com/doubtfire-lms/doubtfire-api/wiki/Generating-PDFs)\">Generating PDFs</a> guide to assist with installing LaTeX to generate PDFs. This step is optional unless you wish to generate PDF submissions.</p><hr><h3 id=\"8-get-it-up-and-running\">8. Get it up and running!<a href=\"#8-get-it-up-and-running\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h3><p>Once you've installed using either the install script or the manual install steps, use the following command to run the api</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> bundle <span class=\"hljs-built_in\">exec</span> rails s</span></code></pre><hr><h2 id=\"step-2-installing-doubtfire-web\">Step 2: Installing doubtfire-web<a href=\"#step-2-installing-doubtfire-web\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h2><p>Continue below steps to manually install <code>doubtfire-web</code> on Mac OS. For installing Doubtfire-web dependencies we have to clone project and change working directory to web</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> https://github.com/doubtfire-lms/doubtfire-web.git</span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> <span class=\"hljs-built_in\">cd</span> ./doubtfire-web</span></code></pre><p>Install <a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js</a> either by <a href=\"https://nodejs.org/download/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">downloading it</a> and installing it manually, or via <a href=\"https://brew.sh/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Homebrew</a> on OS X:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> brew install node</span></code></pre><p>For switching the Ruby version to 2.3.8 use the following command:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> rbenv <span class=\"hljs-built_in\">local</span> 2.3.8</span></code></pre><p>Install overcommit and Ruby <a href=\"https://sass-lang.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SASS</a>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> gem install overcommit sass</span></code></pre><p>If gem fails, you should read the Doubfire API README to install ruby. If you are not using rbenv, e.g., using Docker instead, you may need to prepend sudo to the above commands to have root write access.</p><p>If using rbenv, rehash to ensure each of the gems are on your PATH:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> rbenv <span class=\"hljs-built_in\">rehash</span></span></code></pre><p>Install and sign the git hooks using overcommit:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> overcommit --install</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> overcommit --sign</span></code></pre><p>Install all node dependencies using npm, as well as <a href=\"https://gruntjs.com/using-the-cli\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">grunt-cli</a> globally:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> npm install</span></code></pre><p>Lastly, to compile and run a watch server and web server, use npm start:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> npm start</span></code></pre><p>This will automatically run the angular 1 grunt watch, and the angular 9 ng serve.</p><p>You can then navigate to the Doubtfire web interface at <a href=\"http://localhost:8000/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:8000</a> on your web browser.</p><hr><h2 id=\"step-3-installing-doubtfireio\">Step 3: Installing Doubtfire.io<a href=\"#step-3-installing-doubtfireio\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h2><p>Clone the Doubtfire.io project and change the working directory into it via,</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> https://github.com/doubtfire-lms/doubtfire.io.git</span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> <span class=\"hljs-built_in\">cd</span> ./doubtfire.io</span></code></pre><p>Then, follow the instructions in the <a href=\"https://github.com/doubtfire-lms/doubtfire.io/blob/master/CONTRIBUTING.md#getting-started\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\"Getting Started\" section of its <code>CONTRIBUTING.md</code> file</a> to setup the project and its development environment, locally.</p>","toc":[{"id":"step-1-installing-doubtfire-api","text":"Step 1: Installing doubtfire-api","depth":1},{"id":"1-install-homebrew-and-homebrew-cask","text":"1. Install Homebrew and Homebrew Cask","depth":2},{"id":"2-install-rbenv-and-ruby-build","text":"2. Install rbenv and ruby-build","depth":2},{"id":"3-install-postgres","text":"3. Install Postgres","depth":2},{"id":"4-install-native-tools","text":"4. Install native tools","depth":2},{"id":"5-install-doubtfire-api-dependencies","text":"5. Install Doubtfire API dependencies","depth":2},{"id":"6-create-and-populate-doubtfire","text":"6. Create and populate Doubtfire","depth":2},{"id":"7-install-latex-to-generate-pdfs","text":"7. Install LaTex to generate PDFs","depth":2},{"id":"8-get-it-up-and-running","text":"8. Get it up and running!","depth":2},{"id":"step-2-installing-doubtfire-web","text":"Step 2: Installing doubtfire-web","depth":1},{"id":"step-3-installing-doubtfireio","text":"Step 3: Installing Doubtfire.io","depth":1}]},"__N_SSG":true}