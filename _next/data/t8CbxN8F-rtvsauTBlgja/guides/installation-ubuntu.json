{"pageProps":{"id":"installation-ubuntu","audience":"developer","markdown":"\n# Automated Installation Scripts\n\nThe automated installation scripts are the simplest way to install Doubtfire using Ubuntu as your fully-fledged\ndevelopment environment.\n\nTo begin, you will first need to clone the `doubtfire-web`, `doubtfire-api`, and `doubtfire.io` repositories. Before\ndoing so, you should fork each of these repositories to your own Github account, to allow your own development and\nenable the creation of pull requests at a later stage. If you are using Ubuntu within a virtualized development\nenvironment, you should also consider taking a snapshot of your machine before you begin this process.\n\nOnce the repositories have been cloned to your local machine, in order, execute the `setup.sh` scripts located in each\nof the following directories:\n\n- `doubtfire-api`,\n- `doubtfire-web`, and\n- `doubtfire.io`.\n\nIt is not necessary to execute the setup scripts with sudo privileges, although you will be prompted for your password\nthroughout stages of the setup. You may be prompted for information or to continue the installation at various stages\nthroughout the installation; simply respond as required.\n\n---\n\n# Manual Installation\n\n## Installing doubtfire-api\n\n### Getting Started\n\nIf you are a developer for the project, it is usually better to\n[create a fork](https://help.github.com/en/github/getting-started-with-github/fork-a-repo) for the repository and then\nfollow the steps given below.\n\nFirst, clone the doubtfire-api repository to your local machine:\n\n```shell\n$ git clone <link>\n```\n\n### Install rbenv and ruby-build\n\nInstall [rbenv](https://github.com/rbenv/rbenv) and ruby-build:\n\n```shell\n$ cd ~\n$ git clone git://github.com/sstephenson/rbenv.git .rbenv\n$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bashrc\n$ echo 'eval \"$(rbenv init -)\"' >> ~/.bashrc\n$ exec $SHELL\n\n$ git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build\n$ echo 'export PATH=\"$HOME/.rbenv/plugins/ruby-build/bin:$PATH\"' >> ~/.bashrc\n$ exec $SHELL\n```\n\n**Note:** if you're using [Oh-My-Zsh](https://ohmyz.sh/), add to your `.zshrc`:\n\n```shell\n$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.zshrc\n$ echo 'eval \"$(rbenv init -)\"' >> ~/.zshrc\n$ echo 'export PATH=\"$HOME/.rbenv/plugins/ruby-build/bin:$PATH\"' >> ~/.zshrc\n```\n\nNow install Ruby v2.3.8:\n\n```shell\n$ sudo apt-get install -y libreadline-dev\n$ rbenv install 2.3.8\n```\n\n### Install Postgres\n\nInstall [Postgres](https://www.postgresql.org/download/linux/):\n\n```shell\n$ sudo apt-get install -y postgresql postgresql-contrib libpq-dev\n\n$ sudo service postgresql restart\n```\n\nEnsure `pg_config` is on the `PATH`, and then login to Postgres. You will need to locate where `apt-get` has installed\nyour Postgres binary and add this to your `PATH`. You can use `whereis psql` for that, but ensure you add the directory\nand not the executable to the path\n\n```shell\n$ whereis pqsl\n/usr/bin/psql\n$ export PATH=/usr/bin:$PATH\n$ sudo -u postgres createuser --superuser $USER\n$ sudo -u postgres createdb $USER\n$ psql\n```\n\nCreate the Doubfire user the following at the Postgres prompt:\n\n```sql\nCREATE ROLE itig WITH CREATEDB PASSWORD 'd872$dh' LOGIN;\n```\n\n### Install native tools\n\nInstall `imagemagick`, `libmagic` and `ghostscript`. You will also need to install the Python `pygments` package:\n\n```shell\nsudo apt-get install -y ghostscript imagemagick libmagickwand-dev libmagic-dev python-pygments ffmpeg curl libreadline-dev gcc make libssl1.0-dev zlib1g-dev\n```\n\n### Install Doubtfire API dependencies\n\nClone project and change your working directory to the api:\n\n```shell\n$ git clone https://github.com/doubtfire-lms/doubtfire-api.git\n$ cd ./doubtfire-api\n```\n\nSet up [overcommit](https://github.com/sds/overcommit) and install hooks:\n\n```shell\n$ gem install overcommit -v 0.47.0\n$ rbenv rehash\n$ overcommit --install\n```\n\nThen install Doubtfire API dependencies using [bundler](https://bundler.io/):\n\n```shell\n$ gem install bundler -v 1.17.3\n$ bundler install --without production replica staging\n$ rbenv rehash\n$ source ~/.bashrc\n```\n\n### Create and populate Doubtfire\n\nWhilst still in the Doubtfire API project root, execute:\n\n```shell\n$ bundle exec rake db:create\n```\n\nYou can choose to populate the database with some fake test data using:\n\n```shell\n$ bundle exec rake db:populate\n```\n\n### Install LaTeX to generate PDFs\n\n```shell\nsudo apt-get install texlive-full\n```\n\nFollow the [Generating PDFs](https://github.com/doubtfire-lms/doubtfire-api/wiki/Generating-PDFs) guide to assist with\ninstalling LaTeX to generate PDFs. This step is optional unless you wish to generate PDF submissions.\n\n## Installation of doubtfire-web\n\n### Getting Started\n\nBefore you get started, make sure you have the `doubtfire-api` up and running. You will need to do this before\ncontinuing.\n\nUsually if you are the developer, its always better to\n[create a fork](https://help.github.com/en/github/getting-started-with-github/fork-a-repo) and then follow the below\nsteps. Firstly we need to clone the web repository to your local machine by selecting \"clone or download\" and copying\nthe link. You can do this by using command below and change to the root directory:\n\n```shell\n$ git clone <link>\n$ cd ./doubtfire-web\n```\n\nInstall [Node.js](https://nodejs.org/en/) either by [downloading it](https://nodejs.org/download/) and installing it\nmanually by using `apt-get`\n\n```shell\n$ curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -\n$ sudo apt-get install -y nodejs\n```\n\nInstall [overcommit](https://github.com/sds/overcommit) and Ruby [SASS](https://sass-lang.com/):\n\n```shell\n$ gem install overcommit sass\n```\n\nIf `gem` fails, you should read the\n[Doubtfire API README](https://github.com/doubtfire-lms/doubtfire-api/blob/development/README.rdoc) doc to install ruby.\nIf you are not using rbenv, e.g., using Docker instead, you may need to prefix `sudo` to the above commands to have root\nwrite access.\n\nIf using `rbenv`, rehash to ensure each of the gems are on your `PATH`:\n\n```shell\n$ rbenv rehash\n```\n\nInstall and sign the git hooks using `overcommit`:\n\n```shell\n$ overcommit --install\n$ overcommit --sign\n```\n\nInstall all node dependencies using `npm`, as well as [grunt-cli](https://gruntjs.com/using-the-cli) globally:\n\n```shell\n$ npm install\n```\n\n**Note:** You may need to install `grunt-cli` globally in Linux using sudo.\n\nLastly, to compile and run a watch server and web server, use `npm start`:\n\n```shell\n$ npm start\n```\n\nThis will automatically run the angular 1 `grunt watch`, and the angular 9 `ng serve`.\n\nYou can then navigate to the Doubtfire web interface at [http://localhost:8000](http://localhost:8000/).\n\n# Installation of Doubtfire.io\n\nClone the Doubtfire.io project and change the working directory into it via,\n\n```shell\n$ git clone https://github.com/doubtfire-lms/doubtfire.io.git\n\n$ cd ./doubtfire.io\n```\n\nThen, follow the instructions in the\n[\"Getting Started\" section of its `CONTRIBUTING.md` file](https://github.com/doubtfire-lms/doubtfire.io/blob/master/CONTRIBUTING.md#getting-started)\nto setup the project and its development environment, locally.\n","title":"Install Doubtfire on Ubuntu","summary":"Guides the user through an installation on Ubuntu","authors":["Justfeedme","jeevanFernandes"],"html":"<h2 id=\"automated-installation-scripts\">Automated Installation Scripts<a href=\"#automated-installation-scripts\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h2><p>The automated installation scripts are the simplest way to install Doubtfire using Ubuntu as your fully-fledged development environment.</p><p>To begin, you will first need to clone the <code>doubtfire-web</code>, <code>doubtfire-api</code>, and <code>doubtfire.io</code> repositories. Before doing so, you should fork each of these repositories to your own Github account, to allow your own development and enable the creation of pull requests at a later stage. If you are using Ubuntu within a virtualized development environment, you should also consider taking a snapshot of your machine before you begin this process.</p><p>Once the repositories have been cloned to your local machine, in order, execute the <code>setup.sh</code> scripts located in each of the following directories:</p><ul><li><code>doubtfire-api</code>,</li><li><code>doubtfire-web</code>, and</li><li><code>doubtfire.io</code>.</li></ul><p>It is not necessary to execute the setup scripts with sudo privileges, although you will be prompted for your password throughout stages of the setup. You may be prompted for information or to continue the installation at various stages throughout the installation; simply respond as required.</p><hr><h2 id=\"manual-installation\">Manual Installation<a href=\"#manual-installation\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h2><h3 id=\"installing-doubtfire-api\">Installing doubtfire-api<a href=\"#installing-doubtfire-api\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h3><h4 id=\"getting-started\">Getting Started<a href=\"#getting-started\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h4><p>If you are a developer for the project, it is usually better to <a href=\"https://help.github.com/en/github/getting-started-with-github/fork-a-repo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">create a fork</a> for the repository and then follow the steps given below.</p><p>First, clone the doubtfire-api repository to your local machine:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> &#x3C;link></span></code></pre><h4 id=\"install-rbenv-and-ruby-build\">Install rbenv and ruby-build<a href=\"#install-rbenv-and-ruby-build\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h4><p>Install <a href=\"https://github.com/rbenv/rbenv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">rbenv</a> and ruby-build:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">cd</span> ~</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> git://github.com/sstephenson/rbenv.git .rbenv</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'export PATH=\"$HOME/.rbenv/bin:$PATH\"'</span> >> ~/.bashrc</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'eval \"$(rbenv init -)\"'</span> >> ~/.bashrc</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">exec</span> <span class=\"hljs-variable\">$SHELL</span></span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'export PATH=\"$HOME/.rbenv/plugins/ruby-build/bin:$PATH\"'</span> >> ~/.bashrc</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">exec</span> <span class=\"hljs-variable\">$SHELL</span></span></code></pre><p><strong>Note:</strong> if you're using <a href=\"https://ohmyz.sh/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Oh-My-Zsh</a>, add to your <code>.zshrc</code>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'export PATH=\"$HOME/.rbenv/bin:$PATH\"'</span> >> ~/.zshrc</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'eval \"$(rbenv init -)\"'</span> >> ~/.zshrc</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">'export PATH=\"$HOME/.rbenv/plugins/ruby-build/bin:$PATH\"'</span> >> ~/.zshrc</span></code></pre><p>Now install Ruby v2.3.8:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo apt-get install -y libreadline-dev</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> rbenv install 2.3.8</span></code></pre><h4 id=\"install-postgres\">Install Postgres<a href=\"#install-postgres\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h4><p>Install <a href=\"https://www.postgresql.org/download/linux/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Postgres</a>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo apt-get install -y postgresql postgresql-contrib libpq-dev</span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> sudo service postgresql restart</span></code></pre><p>Ensure <code>pg_config</code> is on the <code>PATH</code>, and then login to Postgres. You will need to locate where <code>apt-get</code> has installed your Postgres binary and add this to your <code>PATH</code>. You can use <code>whereis psql</code> for that, but ensure you add the directory and not the executable to the path</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> whereis pqsl</span>\n/usr/bin/psql\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">export</span> PATH=/usr/bin:<span class=\"hljs-variable\">$PATH</span></span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo -u postgres createuser --superuser <span class=\"hljs-variable\">$USER</span></span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo -u postgres createdb <span class=\"hljs-variable\">$USER</span></span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> psql</span></code></pre><p>Create the Doubfire user the following at the Postgres prompt:</p><pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">ROLE</span> itig <span class=\"hljs-keyword\">WITH</span> CREATEDB <span class=\"hljs-keyword\">PASSWORD</span> <span class=\"hljs-string\">'d872$dh'</span> LOGIN;</code></pre><h4 id=\"install-native-tools\">Install native tools<a href=\"#install-native-tools\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h4><p>Install <code>imagemagick</code>, <code>libmagic</code> and <code>ghostscript</code>. You will also need to install the Python <code>pygments</code> package:</p><pre><code class=\"hljs language-shell\">sudo apt-get install -y ghostscript imagemagick libmagickwand-dev libmagic-dev python-pygments ffmpeg curl libreadline-dev gcc make libssl1.0-dev zlib1g-dev</code></pre><h4 id=\"install-doubtfire-api-dependencies\">Install Doubtfire API dependencies<a href=\"#install-doubtfire-api-dependencies\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h4><p>Clone project and change your working directory to the api:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> https://github.com/doubtfire-lms/doubtfire-api.git</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">cd</span> ./doubtfire-api</span></code></pre><p>Set up <a href=\"https://github.com/sds/overcommit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">overcommit</a> and install hooks:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> gem install overcommit -v 0.47.0</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> rbenv <span class=\"hljs-built_in\">rehash</span></span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> overcommit --install</span></code></pre><p>Then install Doubtfire API dependencies using <a href=\"https://bundler.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">bundler</a>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> gem install bundler -v 1.17.3</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> bundler install --without production replica staging</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> rbenv <span class=\"hljs-built_in\">rehash</span></span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">source</span> ~/.bashrc</span></code></pre><h4 id=\"create-and-populate-doubtfire\">Create and populate Doubtfire<a href=\"#create-and-populate-doubtfire\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h4><p>Whilst still in the Doubtfire API project root, execute:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> bundle <span class=\"hljs-built_in\">exec</span> rake db:create</span></code></pre><p>You can choose to populate the database with some fake test data using:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> bundle <span class=\"hljs-built_in\">exec</span> rake db:populate</span></code></pre><h4 id=\"install-latex-to-generate-pdfs\">Install LaTeX to generate PDFs<a href=\"#install-latex-to-generate-pdfs\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h4><pre><code class=\"hljs language-shell\">sudo apt-get install texlive-full</code></pre><p>Follow the <a href=\"https://github.com/doubtfire-lms/doubtfire-api/wiki/Generating-PDFs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Generating PDFs</a> guide to assist with installing LaTeX to generate PDFs. This step is optional unless you wish to generate PDF submissions.</p><h3 id=\"installation-of-doubtfire-web\">Installation of doubtfire-web<a href=\"#installation-of-doubtfire-web\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h3><h4 id=\"getting-started-1\">Getting Started<a href=\"#getting-started-1\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h4><p>Before you get started, make sure you have the <code>doubtfire-api</code> up and running. You will need to do this before continuing.</p><p>Usually if you are the developer, its always better to <a href=\"https://help.github.com/en/github/getting-started-with-github/fork-a-repo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">create a fork</a> and then follow the below steps. Firstly we need to clone the web repository to your local machine by selecting \"clone or download\" and copying the link. You can do this by using command below and change to the root directory:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> &#x3C;link></span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">cd</span> ./doubtfire-web</span></code></pre><p>Install <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js</a> either by <a href=\"https://nodejs.org/download/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">downloading it</a> and installing it manually by using <code>apt-get</code></p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo apt-get install -y nodejs</span></code></pre><p>Install <a href=\"https://github.com/sds/overcommit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">overcommit</a> and Ruby <a href=\"https://sass-lang.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SASS</a>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> gem install overcommit sass</span></code></pre><p>If <code>gem</code> fails, you should read the <a href=\"https://github.com/doubtfire-lms/doubtfire-api/blob/development/README.rdoc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Doubtfire API README</a> doc to install ruby. If you are not using rbenv, e.g., using Docker instead, you may need to prefix <code>sudo</code> to the above commands to have root write access.</p><p>If using <code>rbenv</code>, rehash to ensure each of the gems are on your <code>PATH</code>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> rbenv <span class=\"hljs-built_in\">rehash</span></span></code></pre><p>Install and sign the git hooks using <code>overcommit</code>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> overcommit --install</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> overcommit --sign</span></code></pre><p>Install all node dependencies using <code>npm</code>, as well as <a href=\"https://gruntjs.com/using-the-cli\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">grunt-cli</a> globally:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> npm install</span></code></pre><p><strong>Note:</strong> You may need to install <code>grunt-cli</code> globally in Linux using sudo.</p><p>Lastly, to compile and run a watch server and web server, use <code>npm start</code>:</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> npm start</span></code></pre><p>This will automatically run the angular 1 <code>grunt watch</code>, and the angular 9 <code>ng serve</code>.</p><p>You can then navigate to the Doubtfire web interface at <a href=\"http://localhost:8000/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:8000</a>.</p><h2 id=\"installation-of-doubtfireio\">Installation of Doubtfire.io<a href=\"#installation-of-doubtfireio\" aria-hidden=\"true\" tabindex=\"-1\"><span> ยง</span></a></h2><p>Clone the Doubtfire.io project and change the working directory into it via,</p><pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git <span class=\"hljs-built_in\">clone</span> https://github.com/doubtfire-lms/doubtfire.io.git</span>\n<span class=\"hljs-meta\">\n$</span><span class=\"bash\"> <span class=\"hljs-built_in\">cd</span> ./doubtfire.io</span></code></pre><p>Then, follow the instructions in the <a href=\"https://github.com/doubtfire-lms/doubtfire.io/blob/master/CONTRIBUTING.md#getting-started\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\"Getting Started\" section of its <code>CONTRIBUTING.md</code> file</a> to setup the project and its development environment, locally.</p>","toc":[{"id":"automated-installation-scripts","text":"Automated Installation Scripts","depth":1},{"id":"manual-installation","text":"Manual Installation","depth":1},{"id":"installing-doubtfire-api","text":"Installing doubtfire-api","depth":2},{"id":"getting-started","text":"Getting Started","depth":3},{"id":"install-rbenv-and-ruby-build","text":"Install rbenv and ruby-build","depth":3},{"id":"install-postgres","text":"Install Postgres","depth":3},{"id":"install-native-tools","text":"Install native tools","depth":3},{"id":"install-doubtfire-api-dependencies","text":"Install Doubtfire API dependencies","depth":3},{"id":"create-and-populate-doubtfire","text":"Create and populate Doubtfire","depth":3},{"id":"install-latex-to-generate-pdfs","text":"Install LaTeX to generate PDFs","depth":3},{"id":"installation-of-doubtfire-web","text":"Installation of doubtfire-web","depth":2},{"id":"getting-started-1","text":"Getting Started","depth":3},{"id":"installation-of-doubtfireio","text":"Installation of Doubtfire.io","depth":1}]},"__N_SSG":true}